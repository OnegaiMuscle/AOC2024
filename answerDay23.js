const fs = require('fs'); // Lire les données du fichier const input = fs.readFileSync('input.txt', 'utf8').trim().split('\n'); // Construire le graphe des connexions const graph = {}; input.forEach(connection => { const [a, b] = connection.split('-'); if (!graph[a]) graph[a] = new Set(); if (!graph[b]) graph[b] = new Set(); graph[a].add(b); graph[b].add(a); }); // Trouver tous les ensembles de trois ordinateurs interconnectés const findTriangles = (graph) => { const triangles = new Set(); for (const a in graph) { for (const b of graph[a]) { if (b > a) { for (const c of graph[b]) { if (c > b && graph[a].has(c)) { triangles.add([a, b, c].sort().join(',')); } } } } } return triangles; }; // Filtrer les ensembles contenant au moins un ordinateur dont le nom commence par "t" const filterTriangles = (triangles) => { return [...triangles].filter(triangle => triangle.split(',').some(name => name.startsWith('t'))); }; // Trouver et compter les ensembles de trois ordinateurs interconnectés const triangles = findTriangles(graph); const filteredTriangles = filterTriangles(triangles); const count = filteredTriangles.
